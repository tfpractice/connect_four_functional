{"version":3,"file":"bundle.es6.js","sources":["../src/node.js","../src/player.js","../src/filter.js","../src/board.js","../src/game.js"],"sourcesContent":["import { Node, } from 'game_grid';\n\nconst { column, row, node: gNode, id } = Node;\n\nconst defP = Object.assign({}, gNode(), { player: null });\n\nexport const node = (c, r, player = null) =>\n    Object.assign({}, gNode(c, r), { player });\n\nexport const player = ({ player } = defP) => player;\n\nexport const copy = n => node(column(n), row(n), player(n));\n\nexport const setPlayer = p => n => node(column(n), row(n), p);\n\nexport const isFree = n => !!n && player(n) == null;\n\nexport const claim = p => n => isFree(n) ? setPlayer(p)(n) : n;\nexport const unClaim = n => setPlayer(null)(n);\n\nexport const samePlayer = n0 => n1 => player(n0) === player(n1);\n\nexport const sameID = a => b => id(a) === id(b);\n","import { claim as claimNode, } from './node';\nexport const playerInit = { name: '', score: 0, id: null };\n\nexport const player = (name = '', score = 0, id = name) => ({ name, score, id });\nexport const name = ({ name } = playerInit) => name;\nexport const score = ({ score } = playerInit) => score;\nexport const id = ({ id } = playerInit) => id;\nexport const copy = p => player(name(p), score(p), id(p));\n\nexport const setName = name => p => player(name, score(p), id(p));\nexport const setID = id => p => player(name(p), score(p), id);\nexport const setScore = score => p => player(name(p), score, id(p));\n\nexport const resetScore = setScore(0);\nexport const incrementScore = p => setScore(score(p) + 1)(p);\nexport const decrementScore = p => setScore(score(p) - 1)(p);\nexport const claim = p => claimNode(id(p));\n","import { asSet, filter, map, some, spread, } from 'fenugreek-collections';\nimport { Compare, } from 'game_grid';\nimport { isFree, samePlayer, } from './node';\n\nconst { samePos } = Compare;\n\nexport const nextFree = nArr => spread(nArr).find(isFree);\nexport const hasFree = nArr => some(nArr)(isFree);\nexport const byPlayer = nArr => (player = null) =>\n  filter(nArr)(samePlayer({ player }));\n\nexport const exceeds = lim => coll => asSet(coll).size > lim;\nexport const anyExceed = lim => coll => some(coll)(exceeds(lim));\nexport const byExcess = lim => arrays => filter(arrays)(exceeds(lim));\n\nexport const callIf = fn => boolFn => n => boolFn(n) ? fn(n) : n;\nexport const repIf = next => boolFn => n => boolFn(n) ? next : n;\nexport const repPos = next => repIf(next)(samePos(next));\nexport const repID = next => repIf(next)(samePos(next));\nexport const replace = next => nArr => map(nArr)(repPos(next));\n","import { some, } from 'fenugreek-collections';\nimport { Graph, } from 'graph-curry';\nimport { Components, Grid, } from 'game_grid';\nimport { id, } from './player';\nimport { copy, } from './node';\nimport { byExcess, byPlayer, exceeds, } from './filter';\n\nconst { graph, nodes, } = Graph;\nconst { genNodes: gen, } = Grid;\nconst { omniComps, } = Components;\n\nexport const genNodes = (c = 7, r = 6) => gen(c, r).map(copy);\nexport const board = (c = 7, r = 6) => graph(...genNodes(c, r));\n\nexport const playerNodes = b => p => byPlayer(nodes(b))(id(p));\nexport const playerGraph = b => p => graph(...playerNodes(b)(p));\n\nexport const hasWinComp = (g, n = 3) => some(omniComps(g))(exceeds(n));\nexport const winComps = (g, n = 3) => byExcess(n)(omniComps(g));\n","import { Graph, } from 'graph-curry';\nimport { Components, Filter, } from 'game_grid';\nimport { claim, } from './node';\nimport { genNodes, } from './board';\nimport { id, player, } from './player';\nimport { anyExceed, byExcess, byPlayer, nextFree, replace, } from './filter';\n\nconst { graph } = Graph;\nconst { omniComps } = Components;\nconst { byCol, } = Filter;\n\nconst dCol = 0;\nconst dPlr = [ player('player0', 0, 0), player('player1', 0, 1) ];\nconst dNod = genNodes(7, 6);\nconst init = ({ column: 0, nodes: genNodes(), players: dPlr, inPlay: false, min: 3 });\n\nexport const game =\n (players = dPlr, nodes = dNod, column = 0, inPlay = false, min = 3) =>\n  ({ players, nodes, column, inPlay, min });\n\nexport const column = ({ column } = init) => column;\nexport const nodes = ({ nodes } = init) => nodes;\nexport const inPlay = ({ inPlay } = init) => inPlay;\nexport const min = ({ min } = init) => min;\nexport const players = ({ players } = init) => players;\nexport const active = ({ players: [ active, passive ] } = init) => active;\nexport const passive = ({ players: [ active, passive ] } = init) => passive;\n\nexport const setNodes = nArr => g =>\n  game(players(g), nArr, column(g), inPlay(g), min(g));\n\nexport const setColumn = col => g =>\n  game(players(g), nodes(g), col, inPlay(g), min(g));\n\nexport const setPlayState = bool => g =>\n  game(players(g), nodes(g), column(g), !!bool, min(g));\n\nexport const setPlayers = pArr => g =>\n  game(pArr, nodes(g), column(g), inPlay(g), min(g));\n\nexport const setMin = m => g =>\n  game(players(g), nodes(g), column(g), inPlay(g), m);\n\nexport const board = g => graph(...nodes(g));\nexport const colNodes = g => byCol(nodes(g))(column(g));\nexport const next = g => nextFree(colNodes(g));\n\nexport const start = g => setPlayState(true)(g);\nexport const stop = g => setPlayState(false)(g);\nexport const canPlay = g => inPlay(g) && !!next(g);\nexport const locked = g => !canPlay(g);\nexport const toggleState = g => setPlayState(!inPlay(g))(g);\n\nexport const togglePlayers = g => setPlayers([ passive(g), active(g) ])(g);\n\nexport const playerNodes = g => p => byPlayer(nodes(g))(id(p));\nexport const actNodes = g => playerNodes(g)(active(g));\nexport const passNodes = g => playerNodes(g)(passive(g));\n\nexport const playerGraph = g => p => graph(...playerNodes(g)(p));\nexport const actGraph = g => playerGraph(g)(active(g));\nexport const passGraph = g => playerGraph(g)(passive(g));\n\nexport const playerComps = g => p => byExcess(1)(omniComps(playerGraph(g)(p)));\nexport const actComps = g => playerComps(g)(active(g));\nexport const passComps = g => playerComps(g)(passive(g));\n\nexport const isWinner = g => p => anyExceed(min(g))(playerComps(g)(p));\nexport const winner = g => players(g).find(isWinner(g));\nexport const endIfWon = g => winner(g) ? stop(g) : g;\n\nexport const claimSwap = g => replace(claim(id(active(g)))(next(g)))(nodes(g));\nexport const claimNext = g => locked(g) ? g : endIfWon(setNodes(claimSwap(g))(g));\n\nexport const select = g => locked(g) ? g : togglePlayers(claimNext(g));\n"],"names":["column","Node","row","gNode","node","id","defP","Object","assign","player","c","r","copy","n","setPlayer","p","isFree","claim","unClaim","samePlayer","n0","n1","sameID","a","b","playerInit","name","score","setName","setID","setScore","resetScore","incrementScore","decrementScore","claimNode","samePos","Compare","nextFree","spread","nArr","find","hasFree","some","byPlayer","filter","exceeds","asSet","coll","size","lim","anyExceed","byExcess","arrays","callIf","boolFn","fn","repIf","next","repPos","repID","replace","map","graph","Graph","nodes","gen","Grid","genNodes","omniComps","Components","board","playerNodes","playerGraph","hasWinComp","g","winComps","byCol","Filter","dPlr","dNod","init","players","inPlay","min","game","active","passive","setNodes","setColumn","col","setPlayState","bool","setPlayers","pArr","setMin","m","colNodes","start","stop","canPlay","locked","toggleState","togglePlayers","actNodes","passNodes","actGraph","passGraph","playerComps","actComps","passComps","isWinner","winner","endIfWon","claimSwap","claimNext","select"],"mappings":"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"}