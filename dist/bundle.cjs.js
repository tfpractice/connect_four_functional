"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var turmericUtils=require("turmeric-utils"),game_grid=require("game_grid"),addMap=turmericUtils.collections.addMap,get$$1=turmericUtils.collections.get,addNodeBin=function(e,r){return addMap(e)(r)(new Map(get$$1(e)(r)))},spreadK=turmericUtils.collections.spreadK,spawn=function(e){return new Map(e)},copy=spawn,fromElements=function(){for(var e=arguments.length,r=Array(e),n=0;n<e;n++)r[n]=arguments[n];return r.reduce(addNodeBin,copy())},nodes=function(e){return spreadK(copy(e))},node$1=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return Object.assign(game_grid.node(e,r),{player:n})},player=function e(r){var n=r.player,e=void 0===n?null:n;return e},isFree=function(e){var r=e.player,n=void 0===r?null:r;return null===n},samePlayer=function(e){var r=e.player;return function(e){var n=e.player;return r===n}},node$2=Object.freeze({default:node$1,player:player,isFree:isFree,samePlayer:samePlayer}),slicedToArray$1=function(){function e(e,r){var n=[],t=!0,a=!1,o=void 0;try{for(var s,i=e[Symbol.iterator]();!(t=(s=i.next()).done)&&(n.push(s.value),!r||n.length!==r);t=!0);}catch(e){a=!0,o=e}finally{try{!t&&i.return&&i.return()}finally{if(a)throw o}}return n}return function(r,n){if(Array.isArray(r))return r;if(Symbol.iterator in Object(r))return e(r,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),toConsumableArray=function(e){if(Array.isArray(e)){for(var r=0,n=Array(e.length);r<e.length;r++)n[r]=e[r];return n}return Array.from(e)},flatten=turmericUtils.collections.flatten,flattenBin=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];return flatten(e)(r)},genNodes$1=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:7,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:6;return game_grid.genNodes(e,r).map(function(e){return node$1(e.column,e.row)})},initNodes=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:7,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:6;return fromElements.apply(void 0,toConsumableArray(genNodes$1(e,r)))},next=function(e){return e.find(isFree)},hasFree=function(e){return e.some(isFree)},nodesByPlayer=function(e){return function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return nodes(e).filter(samePlayer({player:r}))}},playerGraph=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Map;return function(r){return fromElements.apply(void 0,toConsumableArray(nodesByPlayer(e)(r)))}},allComps=function(e){return[game_grid.colComponents,game_grid.negComponents,game_grid.posComponents,game_grid.rowComponents].map(function(r){return r(e)}).reduce(flattenBin,[])},splitComps=function(e){return(new Map).set("row",game_grid.rowComponents(e)).set("col",game_grid.colComponents(e)).set("pos",game_grid.posComponents(e)).set("neg",game_grid.negComponents(e))},moreThan=function(e){return function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Set;return r.size>e}},winComp=function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;return allComps(e).some(moreThan(r))},board=Object.freeze({default:fromElements,genNodes:genNodes$1,initNodes:initNodes,next:next,hasFree:hasFree,nodesByPlayer:nodesByPlayer,playerGraph:playerGraph,allComps:allComps,splitComps:splitComps,moreThan:moreThan,winComp:winComp}),playerInit={name:"",score:0},player$1=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return{name:e,score:r}},name=function e(r){var e=r.name;return e},score=function e(r){var e=r.score;return e},resetScore=function(e){return e.wins=0},incrementScore=function(e){var r=e.score;return++r},decrementScore=function(e){var r=e.score;return--r},claim=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return function(r){return r&&Object.assign(r,{player:e})}},player$2=Object.freeze({playerInit:playerInit,default:player$1,name:name,score:score,resetScore:resetScore,incrementScore:incrementScore,decrementScore:decrementScore,claim:claim}),addBinMap$1$1=turmericUtils.collections.addBinMap,spread$1$1=turmericUtils.collections.spread,kvMap=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Map;return function(r){return spread$1$1(e).map(function(e){var n=slicedToArray$1(e,2),t=n[0],a=n[1],o=void 0===a?t:a;return[t,r(o)]}).reduce(addBinMap$1$1,new Map)}},spreadKV$1=turmericUtils.collections.spreadKV,initGame=function(){return{cID:0,nodes:genNodes$1(),players:[player$1("player0"),player$1("player1")]}},game=function(e){var r=e.cID,n=void 0===r?0:r,t=e.nodes,a=void 0===t?genNodes$1():t,o=e.players,s=void 0===o?initGame().players:o;return{cID:n,nodes:a,players:s}},setPlayers=function(e){return function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initGame();return Object.assign({},r,e)}},cID=function e(r){var n=r.cID,e=void 0===n?0:n;return e},board$1=function(e){var r=e.nodes;return fromElements.apply(void 0,toConsumableArray(r))},players=function e(r){var e=r.players;return e},active=function e(r){var n=slicedToArray$1(r.players,2),e=n[0];n[1];return e},passive=function e(r){var n=slicedToArray$1(r.players,2),e=(n[0],n[1]);return e},column=function(e){var r=e.cID,n=e.nodes;return game_grid.nodesByColumn(board$1({nodes:n}))(r)},next$1=function(e){return next(column(e))},playerMap=function(e){return new Map(spreadKV$1(new Set(e)))},graphs=function(e){var r=e.players,n=e.nodes;return kvMap(playerMap(r))(playerGraph(board$1({nodes:n})))},actGraph=function(e){var r=slicedToArray$1(e.players,2),n=r[0],t=(r[1],e.nodes);return playerGraph(board$1({nodes:t}))(n)},passGraph=function(e){var r=slicedToArray$1(e.players,2),n=(r[0],r[1],e.nodes);return playerGraph(board$1({nodes:n}))(pas)},components$1=function(e){return kvMap(graphs(e))(splitComps)},actComps=function(e){return allComps(actGraph(e))},passComps=function(e){return allComps(passGraph(e))},togglePlayers=function(e){var r,n=e.players;return r=[n[0],n[1]],n[1]=r[0],n[0]=r[1],r},setColumn=function(e){return function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return Object.assign(e,{cID:r})}},select=function(e){return claim(active(e))(next$1(e))&&togglePlayers(e)},hasWinComp=function(e){return function(r){return winComp(playerGraph(e)(r),3)}},winner=function(e){var r=e.players,n=e.nodes;return r.find(hasWinComp(board$1({nodes:n})))},game$1=Object.freeze({default:game,setPlayers:setPlayers,cID:cID,board:board$1,players:players,active:active,passive:passive,column:column,next:next$1,playerMap:playerMap,graphs:graphs,actGraph:actGraph,passGraph:passGraph,components:components$1,actComps:actComps,passComps:passComps,togglePlayers:togglePlayers,setColumn:setColumn,select:select,hasWinComp:hasWinComp,winner:winner}),src$1=Object.freeze({Board:board,Game:game$1,Node:node$2,Player:player$2,board:fromElements,node:node$1,player:player$1,game:game,kvMap:kvMap});exports.default=src$1,exports.Board=board,exports.Game=game$1,exports.Node=node$2,exports.Player=player$2,exports.board=fromElements,exports.node=node$1,exports.player=player$1,exports.game=game,exports.kvMap=kvMap;
//# sourceMappingURL=bundle.cjs.js.map
